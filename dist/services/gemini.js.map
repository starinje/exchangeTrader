{"version":3,"sources":["../../src/services/gemini.js"],"names":["GeminiService","options","getOrderBook","requestOptions","uri","url","session","orderBook","console","log","defaults","json","headers"],"mappings":";;;;;;AAAA;;;;;;;;;;IAEqBA,a,GAEjB,uBAAYC,OAAZ,EAAoB;AAAA;;AAAA;;AAAA,SAUpBC,YAVoB,6CAUL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEDC,sCAFC,GAEgB;AACnBC,iCAAK,MAAKH,OAAL,CAAaI;AADC,yBAFhB;AAAA;AAAA,+BAMe,MAAKC,OAAL,CAAaH,cAAb,CANf;;AAAA;AAMHI,iCANG;AAAA,yDAOAA,SAPA;;AAAA;AAAA;AAAA;;AAUPC,gCAAQC,GAAR;;AAVO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVK;;AAChB,SAAKR,OAAL,GAAeA,WAAW,EAA1B;AACA,SAAKK,OAAL,GAAe,yBAAGI,QAAH,CAAY;AACvBC,cAAM,IADiB;AAEvBC,iBAAS;AACL,0BAAc;AADT;AAFc,KAAZ,CAAf;AAMH,C;;kBAVgBZ,a","file":"gemini.js","sourcesContent":["import rp from 'request-promise'\n\nexport default class GeminiService {\n\n    constructor(options){\n        this.options = options || {}\n        this.session = rp.defaults({\n            json: true,\n            headers: {\n                'User-Agent': 'Request-Promise'\n            }\n        })\n    }\n\n    getOrderBook = async () => {\n        try{\n            const requestOptions = {\n                uri: this.options.url,\n            }\n\n            let orderBook = await this.session(requestOptions)\n            return orderBook\n\n        } catch(err){\n            console.log(err)\n        }\n\n    }\n\n}"]}