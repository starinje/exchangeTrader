{"version":3,"sources":["../../src/services/gdax.js"],"names":["GdaxService","options","getOrderBook","requestOptions","uri","url","session","orderBook","bids","map","bidLevel","price","amount","asks","askLevel","timeStamp","console","log","defaults","json","headers"],"mappings":";;;;;;AAAA;;;;;;;;;;IAEqBA,W,GAEjB,qBAAYC,OAAZ,EAAoB;AAAA;;AAAA;;AAAA,SAUpBC,YAVoB,6CAUL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEDC,sCAFC,GAEgB;AACnBC,iCAAK,MAAKH,OAAL,CAAaI;AADC,yBAFhB;AAAA;AAAA,+BAMe,MAAKC,OAAL,CAAaH,cAAb,CANf;;AAAA;AAMHI,iCANG;AAQDC,4BARC,GAQMD,UAAUC,IAAV,CAAeC,GAAf,CAAmB,UAACC,QAAD,EAAc;AAC1C,mCAAO;AACHC,uCAAOD,SAAS,CAAT,CADJ;AAEHE,wCAAQF,SAAS,CAAT;AAFL,6BAAP;AAIH,yBALY,CARN;AAeDG,4BAfC,GAeMN,UAAUM,IAAV,CAAeJ,GAAf,CAAmB,UAACK,QAAD,EAAc;AAC1C,mCAAO;AACHH,uCAAOG,SAAS,CAAT,CADJ;AAEHF,wCAAQE,SAAS,CAAT;AAFL,6BAAP;AAIH,yBALY,CAfN;;AAsBP;;AAtBO,yDAuBA;AACHD,kCAAMA,IADH;AAEHL,kCAAMA,IAFH;AAGHO,uCAAW;AAHR,yBAvBA;;AAAA;AAAA;AAAA;;AA+BPC,gCAAQC,GAAR;;AA/BO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVK;;AAChB,SAAKhB,OAAL,GAAeA,WAAW,EAA1B;AACA,SAAKK,OAAL,GAAe,yBAAGY,QAAH,CAAY;AACvBC,cAAM,IADiB;AAEvBC,iBAAS;AACL,0BAAc;AADT;AAFc,KAAZ,CAAf;AAMH,C;;kBAVgBpB,W","file":"gdax.js","sourcesContent":["import rp from 'request-promise'\n\nexport default class GdaxService {\n\n    constructor(options){\n        this.options = options || {}\n        this.session = rp.defaults({\n            json: true,\n            headers: {\n                'User-Agent': 'Request-Promise'\n            }\n        })\n    }\n\n    getOrderBook = async () => {\n        try{\n            const requestOptions = {\n                uri: this.options.url,\n            }\n\n            let orderBook = await this.session(requestOptions)\n    \n            const bids = orderBook.bids.map((bidLevel) => {\n                return {\n                    price: bidLevel[0],\n                    amount: bidLevel[1]\n                }\n            })\n\n            const asks = orderBook.asks.map((askLevel) => {\n                return {\n                    price: askLevel[0],\n                    amount: askLevel[1]\n                }\n            })\n\n            // reformat order book into standard format\n            return {\n                asks: asks,\n                bids: bids,\n                timeStamp: 'timestamp'\n            }\n            \n\n        } catch(err){\n            console.log(err)\n        }\n    }\n\n}"]}